name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.7
      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: '3.12'
      - name: Run pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  test:
    name: Test Suite
    needs: [lint]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.7

      - name: Install Poetry
        run: |
          python3 -m pip install pipx
          pipx install poetry
          poetry --version

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Dump environment details for debugging
        run: |
          echo "PATH:"
          echo $PATH
          poetry env info

      - name: Install dependencies
        run: poetry install --no-interaction -vv

      - name: Run tests with coverage
        run: poetry run pytest --cov=py_name_entity_recognition --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@e4a643b7430a33a30a174c102a0a29583b276985 # v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: ${{ matrix.os }}-py${{ matrix.python-version }}
          fail_ci_if_error: true
          verbose: true
        # The token is not available in forks, so we can't fail the job if the step fails.
        continue-on-error: true

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: logs-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            *.log
            coverage.xml
          if-no-files-found: ignore