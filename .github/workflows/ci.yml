name: Test and Publish

on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        pip install poetry
        poetry config virtualenvs.create false

    - name: Install dependencies
      run: |
        poetry install --no-root --no-interaction --no-ansi

    - name: Download spaCy model
      run: |
        poetry run python -m spacy download en_core_web_sm

    - name: Lint with ruff
      run: |
        poetry run ruff check .

    - name: Format with black
      run: |
        poetry run black --check .

    - name: Test with pytest
      run: |
        poetry run pytest --cov=py_name_entity_recognition --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    environment: pypi
    # Only publish on tags that start with v
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Set version from tag
      run: |
        # The GITHUB_REF is in the format 'refs/tags/vX.Y.Z'
        # We extract X.Y.Z
        VERSION=${GITHUB_REF#refs/tags/v}
        poetry version $VERSION
    - name: Build package
      run: |
        poetry build

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
